replicaCount: 1

image:
  repository: advancedtelematic/ota-plus-web
  tag: latest
  pullPolicy: Always

configMap:
  API_GATEWAY_HOST: api
  API_GATEWAY_PORT: '80'
  API_GATEWAY_SCHEME: 'http'
  AUTH0_DOMAIN: ats-dev.eu.auth0.com
  app:
    enabled: true
  atsgarage:
    enabled: false
    AUTH0_CALLBACK_URL: https://app.gw.ota.local/callback
    AUTH0_DB_CONNECTION: StagingUsers
    AUTH0_SIGN_UP_URL: http://app.ota.local
    AUTH0_TOKEN_AUDIENCE: https://app.ota.local
    OIDC_CONFIG_URL: https://ats-dev.eu.auth0.com/
    OIDC_ISSUER: https://ats-dev.eu.auth0.com/
  connect:
    enabled: false
    AUTH0_CALLBACK_URL: https://app-here.ota.local/callback
    OIDC_CONFIG_URL: https://stg.account.api.here.com
    OIDC_ISSUER: https://st.p.account.here.com
  AUTH_PLUS_SCHEME: "http"
  AUDITOR_HOST: ota-auditor
  AUDITOR_PORT: '80'
  AUTH_PLUS_HOST: ota-auth-plus
  AUTH_PLUS_PORT: '80'
  CAMPAIGNER_HOST: ota-campaigner
  CAMPAIGNER_PORT: '80'
  CRYPT_HOST: ota-crypt
  CRYPT_PORT: '80'
  DEVICE_GATEWAY_PORT: '8000'
  DEVICE_REGISTRY_HOST: ota-device-registry
  DEVICE_REGISTRY_PORT: '80'
  DIRECTOR_HOST: ota-director
  DIRECTOR_PORT: '80'
  ENV_PREFIX: ota_
  JAVA_OPTS: -Xmx300m
  KAFKA_BOOTSTRAP_SERVERS: ota-kafka:9092
  KAFKA_HOST: ota-kafka:9092
  KAFKA_TOPIC_SUFFIX: ota
  LOG_APPENDER: async_json
  REPORT_METRICS: false
  SOTA_CORE_HOST: ota-core
  SOTA_CORE_PORT: '80'
  TOGGLE_ATS_GARAGE_THEME: 'true'
  TOGGLE_AUTO_FEATURE_ACTIVATION: 'true'
  TOGGLE_CREDENTIALS_DOWNLOAD: 'true'
  TOGGLE_USER_PROFILE_MENU: 'true'
  TREEHUB_HOST_PUB: treehub.ota.local
  TREEHUB_PORT_PUB: '80'
  TREEHUB_SCHEME_PUB: 'http'
  TUF_KEYSERVER_HOST: ota-tuf-keyserver
  TUF_KEYSERVER_PORT: '80'
  TUF_REPOSERVER_HOST: ota-tuf-reposerver-internal
  TUF_REPOSERVER_HOST_PUB: ota-tuf-reposerver.ota.local
  TUF_REPOSERVER_PORT: '80'
  TUF_REPOSERVER_PORT_PUB: '80'
  TUF_REPOSERVER_SCHEME_PUB: 'http'
  USER_PROFILE_HOST: ota-user-profile
  USER_PROFILE_PORT: '80'
  WS_HOST: web-events.ota.local
  WS_PORT: '80'
  WS_SCHEME: ws
  rootLevel: DEBUG

service:
  type: ClusterIP
  externalPort: 80
  internalPort: 9001
  # These can be set when using the LoadBalancer type on a non-local setup:
  # internal: true
  # sslCert: arn:aws:iam::123456787890:server-certificate/cert-name
  # sslPorts: "*"
  # dnsName: app.ota.local
  # dnsNameConnect: connect.ota.local

secret:
  PLAY_CRYPTO_SECRET: youshouldreplacethiswithsomeotherlongsecret
  # AUTHPLUS_CLIENT_ID: authPlusAppId
  # AUTHPLUS_SECRET: authPlusAppSecret
  # shared
  AUTH0_AUTH_PLUS_CLIENT_ID: someID
  AUTH0_USER_UPDATE_TOKEN: someupdatetoken

  # atsgarage
  atsgarage:
    AUTH0_CLIENT_ID: someID
    AUTH0_CLIENT_SECRET: someSecret
  # ota-connect
  connect:
    AUTH0_CLIENT_ID: someID
    AUTH0_CLIENT_SECRET: someSecret
    OIDC_KEYSET: '{\"keys\":[{\"some\":\"keyset\"}]}'

  # "youshouldreplacethiswithsomeotherlongsecret" as base64, since
  # that is how Auth+ wants it:
  JWT_SECRET: eW91c2hvdWxkcmVwbGFjZXRoaXN3aXRoc29tZW90aGVybG9uZ3NlY3JldA==

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "300m"
  path: /
  hosts:
    atsgarage:
      - app.ota.local
    connect:
      - connect.ota.local
  tls:
    connect: []


resources:
  requests:
    cpu: 80m
    memory: 350Mi

privateRegistry: false

registryPullSecret: docker-registry-key

nodeSelector: {}

tolerations: []

affinity: {}

withAuthPlus: true
