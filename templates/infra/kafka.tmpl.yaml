---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
  KAFKA_ZOOKEEPER_CONNECT: "{{ .zookeeper_host }}:2181"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-shared
data:
  KAFKA_BOOTSTRAP_SERVERS: {{.kafka_host}}:9092
  KAFKA_HOST: {{.kafka_host}}:9092
  KAFKA_TOPIC_SUFFIX: {{.kafka_topic_suffix}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
      - name: kafka-init
        image: {{ .init_docker_image }}
        command: ["sh", "-c", "until nc -z {{ .zookeeper_host }} 2181; do sleep 2s; done"]
      containers:
      - name: kafka
        image: {{ .kafka_docker_image }}
        envFrom:
        - configMapRef:
            name: kafka-config
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        command:
        - sh
        - -c
        - |
          unset KAFKA_PORT && \
          export KAFKA_ADVERTISED_HOST_NAME=${POD_IP} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_IP}:9092 && \
          export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
          export KAFKA_LOG_DIRS=/opt/kafka/data && \
          /etc/confluent/docker/run
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9092
          timeoutSeconds: 5
        ports:
        - containerPort: 9092
        readinessProbe:
          exec:
            command:
            - kafka-topics
            - --zookeeper
            - {{ .zookeeper_host }}:2181
            - --list
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: {{ .kafka_cpu }}
            memory: {{ .kafka_mem }}
        volumeMounts:
        - name: kafka-data
          mountPath: /opt/kafka/data
          subPath: kafka
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 10Gi
  {{- if .persistent_volumes}}
  selector:
    matchLabels:
      volume: kafka-pv
  {{- end}}
  {{- if .storage_class_name}}
  storageClassName: {{ .storage_class_name }}
  {{- end}}
---
{{- if .persistent_volumes}}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv
  labels:
    volume: kafka-pv
spec:
  capacity:
    storage: 10Gi
  accessModes: [ "ReadWriteOnce" ]
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/data/kafka"
{{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
  - port: 9092
  selector:
    app: kafka
