---
apiVersion: v1
kind: ConfigMap
metadata:
  name: zookeeper-config
data:
  ZK_REPLICAS: "1"
  ZK_HEAP_SIZE: "250M"
  ZK_TICK_TIME: "2000"
  ZK_INIT_LIMIT: "10"
  ZK_SYNC_LIMIT: "5"
  ZK_MAX_CLIENT_CNXNS: "60"
  ZK_SNAP_RETAIN_COUNT: "3"
  ZK_PURGE_INTERVAL: "1"
  ZK_LOG_LEVEL: INFO
  ZK_CLIENT_PORT: "2181"
  ZK_SERVER_PORT: "2888"
  ZK_ELECTION_PORT: "3888"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: zookeeper
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: {{ .zookeeper_docker_image }}
        envFrom:
        - configMapRef:
            name: zookeeper-config
        command: ['sh', '-c', 'zkGenConfig.sh && exec zkServer.sh start-foreground']
        livenessProbe:
          exec:
            command: ["zkOk.sh"]
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: election
        readinessProbe:
          exec:
            command: ["zkOk.sh"]
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          requests:
            cpu: {{ .zookeeper_cpu }}
            memory: {{ .zookeeper_mem }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper
      volumes:
      - name: zookeeper-data
        persistentVolumeClaim:
          claimName: zookeeper-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-pvc
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 10Gi
  {{- if .persistent_volumes}}
  selector:
    matchLabels:
      volume: zookeeper-pv
  {{- end}}
  {{- if .storage_class_name}}
  storageClassName: {{ .storage_class_name }}
  {{- end}}
---
{{- if .persistent_volumes}}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: zookeeper-pv
  labels:
    volume: zookeeper-pv
spec:
  capacity:
    storage: 10Gi
  accessModes: [ "ReadWriteOnce" ]
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/data/zookeeper"
{{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  - port: 2888
    name: peer
  - port: 3888
    name: election
  selector:
    app: zookeeper
